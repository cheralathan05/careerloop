// client/src/pages/auth/ResetPassword.jsx
import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate, Link } from 'react-router-dom';
import axios from 'axios';
import { motion } from 'framer-motion';

// --- Animation Variants ---
const containerVariants = {
Â  hidden: { opacity: 0, y: 50, scale: 0.95 },
Â  visible: { 
Â  Â  opacity: 1, 
Â  Â  y: 0,
Â  Â  scale: 1,
Â  Â  transition: { type: 'spring', stiffness: 100, duration: 0.8 }
Â  }
};

const ResetPassword = () => {
Â  const location = useLocation();
Â  const navigate = useNavigate();

Â  const [token, setToken] = useState('');
Â  const [password, setPassword] = useState('');
Â  const [confirmPassword, setConfirmPassword] = useState('');
Â  const [message, setMessage] = useState('');
Â  const [error, setError] = useState('');
Â  const [loading, setLoading] = useState(false);

Â  const API_URL = 'http://localhost:5000/api/auth/reset-password'; // Define API URL

Â  // ðŸ”‘ Extract token from URL or sessionStorage
Â  useEffect(() => {
Â  Â  const queryParams = new URLSearchParams(location.search);
Â  Â  const urlToken = queryParams.get('token');
Â  Â  const storedToken = sessionStorage.getItem('resetToken');

Â  Â  if (urlToken) {
Â  Â  Â  setToken(urlToken);
Â  Â  Â  sessionStorage.setItem('resetToken', urlToken); // persist token
Â  Â  } else if (storedToken) {
Â  Â  Â  setToken(storedToken);
Â  Â  } else {
Â  Â  Â  setError('Invalid or missing token. Please request a new access link.');
Â  Â  }
Â  }, [location.search]);

Â  const handleSubmit = async (e) => {
Â  Â  e.preventDefault();

Â  Â  if (!token) {
Â  Â  Â  setError('Cannot submit: Token is missing.');
Â  Â  Â  return;
Â  Â  }
Â  Â  if (password.length < 8) {
Â  Â  Â  setError('New password requires minimum 8 characters.');
Â  Â  Â  return;
Â  Â  }
Â  Â  if (password !== confirmPassword) {
Â  Â  Â  setError('Input mismatch: Passwords do not align.');
Â  Â  Â  return;
Â  Â  }

Â  Â  setLoading(true);
Â  Â  setError('');
Â  Â  setMessage('');

Â  Â  try {
Â  Â  Â  const { data } = await axios.post(API_URL, { token, newPassword: password });

Â  Â  Â  setMessage(data.message || 'Password reset successful. Access credential updated.');
Â  Â  Â  sessionStorage.removeItem('resetToken'); // clear token after success

Â  Â  Â  // Redirect to login after 3 seconds
Â  Â  Â  setTimeout(() => navigate('/login'), 3000);
Â  Â  } catch (err) {
Â  Â  Â  setError(err.response?.data?.message || 'Access key validation failed. Please re-check the link.');
Â  Â  Â  setLoading(false);
Â  Â  }
Â  };

Â  return (
Â  Â  // Dark background to match Neo-Futuristic theme
Â  Â  <div className="flex justify-center items-center min-h-screen bg-gray-900 p-4">
Â  Â  Â  <motion.div
Â  Â  Â  Â  className="w-full max-w-md p-8 bg-gray-800 rounded-xl shadow-2xl shadow-purple-900/50 border border-blue-700"
Â  Â  Â  Â  variants={containerVariants}
Â  Â  Â  Â  initial="hidden"
Â  Â  Â  Â  animate="visible"
Â  Â  Â  >
Â  Â  Â  Â  {/* Title */}
Â  Â  Â  Â  <h2 className="text-3xl font-extrabold text-center mb-6 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500">
Â  Â  Â  Â  Â  Update Access Credential
Â  Â  Â  Â  </h2>
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Message/Error Boxes */}
Â  Â  Â  Â  {error && (
Â  Â  Â  Â  Â  <div className="bg-red-900/40 border border-red-600 text-red-400 px-4 py-2 rounded text-sm text-center font-mono mb-4">
Â  Â  Â  Â  Â  Â  ERROR: {error}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}
Â  Â  Â  Â  {message && (
Â  Â  Â  Â  Â  <div className="bg-green-900/40 border border-green-600 text-green-400 px-4 py-2 rounded text-sm text-center font-mono mb-4">
Â  Â  Â  Â  Â  Â  {message}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}

Â  Â  Â  Â  {token ? (
Â  Â  Â  Â  Â  <form onSubmit={handleSubmit} className="space-y-6">
Â  Â  Â  Â  Â  Â  {/* Password Field */}
Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-cyan-400 mb-1">New Password (Min 8 chars):</label>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  Â  Â  Â  value={password}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setPassword(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  className="w-full p-3 bg-gray-700 text-gray-200 border border-gray-700 rounded-lg focus:border-cyan-500 focus:ring-1 focus:ring-cyan-500 outline-none transition-colors"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* Confirm Password Field */}
Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-cyan-400 mb-1">Confirm New Password:</label>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  Â  Â  Â  value={confirmPassword}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setConfirmPassword(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  className="w-full p-3 bg-gray-700 text-gray-200 border border-gray-700 rounded-lg focus:border-cyan-500 focus:ring-1 focus:ring-cyan-500 outline-none transition-colors"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* Submit Button */}
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  className="w-full p-3 font-semibold text-white rounded-lg 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bg-gradient-to-r from-purple-500 to-cyan-500 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  hover:from-purple-400 hover:to-cyan-400 transition-all disabled:opacity-50"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {loading ? 'Processing Update...' : 'RESET CREDENTIAL'}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </form>
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <div className="text-center p-4 text-gray-400">
Â  Â  Â  Â  Â  Â  <p className="font-mono">Awaiting valid access key...</p>
Â  Â  Â  Â  Â  Â  <Link to="/forgot-password" className="text-purple-400 hover:text-cyan-400 mt-2 block">
Â  Â  Â  Â  Â  Â  Â  Request New Access Link
Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}
Â  Â  Â  </motion.div>
Â  Â  </div>
Â  );
};

export default ResetPassword;